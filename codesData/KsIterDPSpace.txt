def knapsack_space_optimized(weights, values, capacity):
    n = len(weights)
    dp = [0] * (capacity + 1)
    for i in range(n):
        for w in range(capacity, weights[i] - 1, -1):
            dp[w] = max(dp[w], dp[w - weights[i]] + values[i])
    return dp[capacity]

# Example
weights = [10, 20, 30]
values = [60, 100, 120]
capacity = 50
print(f"Maximum value (Space Optimized DP): {knapsack_space_optimized(weights, values, capacity)}")
